<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yixiao.mapper.UserMapper" >
  <!-- 开启二级缓存 -->
  <cache/>
  <!-- <cache
  eviction="FIFO"  回收策略为先进先出
  flushInterval="60000" 自动刷新时间60s
  size="512" 最多缓存512个引用对象
  readOnly="true" 只读

  1. 映射语句文件中的所有select语句将会被缓存。
  2. 映射语句文件中的所有insert，update和delete语句会刷新缓存。
  3. 缓存会使用Least Recently Used（LRU，最近最少使用的）算法来收回。
  4. 缓存会根据指定的时间间隔来刷新。
  5. 缓存会存储1024个对象
  -->

  <!-- 根据ID查询得到一个USER对象-->
  <select id="getUser" parameterType="int" resultType="User">
    select * from users where id=#{id}
  </select>

  <!-- 创建用户 Create -->
  <insert id="addUser" parameterType="User">
    insert into users(name,age) values(#{name}, #{age})
  </insert>

  <!-- 删除用户 Remove -->
  <delete id="deleteUser" parameterType="int" >
      delete from users where id=#{id}
  </delete>

  <!-- 修改用户 Update -->
  <update id="updateUser" parameterType="User">
      update users set name=#{name}, age=#{age} where id=#{id}
  </update>
  <!-- 查询全部用户 -->
  <select id="getAllUsers" resultType="User">
      select * from users
  </select>

  <!--查询得到男性或女性的数量, 如果传入的是0就女性否则是男性-->
  <select id="getUserCount" parameterMap="getUserCountMap" statementType="CALLABLE">
   CALL mybatis.ges_user_count(?,?)
  </select>

  <!--
   parameterMap.put("sexid", 0);
   parameterMap.put("usercount", -1);
  -->
  <parameterMap type="java.util.Map" id="getUserCountMap">
    <parameter property="sexid" mode="IN" jdbcType="INTEGER"/>
    <parameter property="usercount" mode="OUT" jdbcType="INTEGER"/>
  </parameterMap>

</mapper>